{
    "openapi": "3.0.0",
    "info": {
        "title": "Auth service API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/": {},
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login via login",
                "operationId": "87312a78798c14bbb2bd82a3c4316c3c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "login": {
                                        "type": "string",
                                        "example": "SomeName"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully authorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "5|EtCJlDMEjmuP7VlQWRJt5iovPD8vxIMBr4BV3jJnb9a2a643"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Wrong credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found or wrong password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "description": "Revokes the current access token of the authenticated user.",
                "operationId": "5c426b1e5da3944c5594ba1ebde3f87b",
                "responses": {
                    "200": {
                        "description": "Logged out successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/logout/other-devices": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout from other devices",
                "description": "Revokes all access tokens except the current one. The current session remains active.",
                "operationId": "8eefde6cf5ad9f26230cc9bb7d4cfb16",
                "responses": {
                    "200": {
                        "description": "All sessions on other devices were closed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All sessions on other devices were closed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/logout/device/{id}": {
            "delete": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout specific device by token ID",
                "description": "Revokes a personal access token by ID. Current active token cannot be deleted.",
                "operationId": "d5a53dcbcd37d6887d76c3fe2edcdde3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Personal access token ID to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Token not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot delete current token.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete current token."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Token could not be deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token could not be deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tokens": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Tokens list",
                "operationId": "19bbedcca0f46ce80566180c3b35f019",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of tokens per page (default: 15)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all user tokens.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "auth_token"
                                                    },
                                                    "tokenable_type": {
                                                        "type": "string",
                                                        "example": "App\\\\Models\\\\User"
                                                    },
                                                    "tokenable_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "abilities": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "*"
                                                        }
                                                    },
                                                    "last_used_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2020-01-27T17:50:45Z"
                                                    },
                                                    "expires_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2020-01-27T17:50:45Z"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2020-01-27T17:50:45Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2020-01-27T17:50:45Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "http://localhost:8080/api/v1/tokens?page=2"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": null
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/email/verify/send": {
            "post": {
                "tags": [
                    "Email"
                ],
                "summary": "Send Verification Email",
                "description": "Send an email verification link to the authenticated user.",
                "operationId": "d920bb96b50bd5c8381172d4333cc299",
                "responses": {
                    "202": {
                        "description": "Verification email sent.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification email sent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Email already verified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email already verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/email/verify/{id}/{hash}": {
            "get": {
                "tags": [
                    "Email"
                ],
                "summary": "Verify Email",
                "description": "Verify the user's email using the link from the verification email.",
                "operationId": "96e06c52354cf9dbed1acf31ff31e1ec",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Email verification hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email has been successfully verified or already verified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email has been successfully verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid verification link.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid verification link."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found."
                    }
                }
            }
        },
        "/api/v1/password/change": {
            "post": {
                "tags": [
                    "Password"
                ],
                "summary": "Change password",
                "operationId": "1cdcc70365d2ce8f731d841c6eea420b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "new_password123"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "example": "new_password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password successfully changed and all sessions (except the current one) were closed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully. All sessions were closed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Old password and new password match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Old password and new password cannot be the same."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/password/forgot": {
            "post": {
                "tags": [
                    "Password"
                ],
                "summary": "Generate reset token and send reset password email",
                "operationId": "c00b53aae1c96f66171d5206b15e7a55",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "some@email.ru"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset email sent successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "We have emailed your password reset link."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The email is invalid or not registered.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The selected email is invalid or not registered."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/password/reset": {
            "get": {
                "tags": [
                    "Password"
                ],
                "summary": "Display password reset form with valid token",
                "operationId": "2f5c6f91e7f06bdae5e64dbea9ad9f9a",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email address for which the password reset is requested",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "user@example.com"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The token for password reset sent to the user's email",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "2bcc51a1eae1daef3b8390a2d9dd5ba00d0ffa8641ea671da4a274b8bac325"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset token and email are valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "2bcc51a1eae1daef3b8390a2d9dd5ba00d0ffa8641ea671da4a274b8bac325"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The provided token is invalid or has expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "string",
                                            "example": "Invalid or expired token."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Password"
                ],
                "summary": "Reset the user's password",
                "operationId": "5684e19b0dadd36faf3f46d7f50f654b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "some@email.ru"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "2bcc51a1eae1daef3b8390a2d9dd5ba00d0ffa8641ea671da4a274b8bac325"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newPassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password has been successfully reset.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your password has been reset."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The selected email is invalid or the password reset process failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "string",
                                            "example": "The provided email is not registered."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired token.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "string",
                                            "example": "Invalid or expired token."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/2fa/enable": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Enable Two Factor Authentication",
                "operationId": "2842b222b9e3e07fb8ac7ca2edb25865",
                "responses": {
                    "200": {
                        "description": "Two Factor Authentication enabled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "two_factor_secret": {
                                            "type": "string",
                                            "example": "DAQJRAKOTDG37DVU"
                                        },
                                        "two_factor_qr_code_base64": {
                                            "description": "Base64 encoded QR code image for 2FA setup",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated. The user must be logged in to enable 2FA.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Two Factor Authentication is already enabled.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "string",
                                            "example": "Two Factor Authentication is already enabled."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/2fa/verify": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify Two Factor Authentication",
                "operationId": "7f688adf112e087a44ac35e243bd654c",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "two_factor_code": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Two Factor Authentication verified successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Two factor authentication verified successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or expired two-factor authentication code.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired two-factor authentication code."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input or missing parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided two-factor authentication code is invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Users list",
                "operationId": "ed60fd9c0d82f219cb715b272953056b",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Count of users per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Number of page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "login": {
                                                        "type": "string",
                                                        "example": "login"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "test@test.com"
                                                    },
                                                    "email_verified_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2020-01-27T17:50:45Z"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2020-01-27T17:50:45Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2020-01-27T17:50:45Z"
                                                    },
                                                    "first_name": {
                                                        "type": "string",
                                                        "example": "John"
                                                    },
                                                    "last_name": {
                                                        "type": "string",
                                                        "example": "Doe"
                                                    },
                                                    "second_name": {
                                                        "type": "string",
                                                        "example": "Smith"
                                                    },
                                                    "birthday": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "1995-05-16"
                                                    },
                                                    "sex": {
                                                        "type": "string",
                                                        "example": "male"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "http://localhost:8080/api/v1/users?page=2"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": null
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create user",
                "operationId": "15bca0772c6c5b926d69e14ac1b1d3db",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "login": {
                                        "type": "string",
                                        "example": "SomeName"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "some@email.ru"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "operationId": "5452b165d47d655136c267bfa873fb4c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "login": {
                                        "type": "string",
                                        "example": "login"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "test@test.com"
                                    },
                                    "email_verified_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-27T17:50:45Z"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-27T17:50:45Z"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-27T17:50:45Z"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "second_name": {
                                        "type": "string",
                                        "example": "Smith"
                                    },
                                    "birthday": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1995-05-16"
                                    },
                                    "sex": {
                                        "type": "string",
                                        "example": "male"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "operationId": "6c5901986c1d443d574ecc1b8b0c00a6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "login": {
                                            "type": "string",
                                            "example": "login"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "test@test.com"
                                        },
                                        "email_verified_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2020-01-27T17:50:45Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2020-01-27T17:50:45Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2020-01-27T17:50:45Z"
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "second_name": {
                                            "type": "string",
                                            "example": "Smith"
                                        },
                                        "birthday": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "1995-05-16"
                                        },
                                        "sex": {
                                            "type": "string",
                                            "example": "male"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Email",
            "description": "Email"
        },
        {
            "name": "Password",
            "description": "Password"
        },
        {
            "name": "User",
            "description": "User"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Enter token as: Bearer {your-token}"
            }
        }
    }
}